---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kafka-network
  namespace: dsbd
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              network/kafka-network: "true"
  podSelector:
    matchLabels:
      network/kafka-network: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: dsbd
spec:
  selector:
    app: kafka
  ports:
    - port: 29092
      targetPort: 29092
      name: internal
    - port: 9092
      targetPort: 9092
      name: external
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: dsbd
spec:
  serviceName: "kafka"
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        network/kafka-network: "true"
        app: kafka
    spec:
      nodeSelector:
        custom-label: "worker"
      enableServiceLinks: false
      containers:
        - name: kafka
          imagePullPolicy: IfNotPresent
          image: confluentinc/cp-kafka:latest
          ports:
            - containerPort: 29092
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT"
            - name: KAFKA_NUM_PARTITIONS
              value: "1"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: kafka-data
      hostname: kafka
      restartPolicy: Always
  volumeClaimTemplates:
      - metadata:
          name: kafka-data
        spec:
          accessModes: [ "ReadWriteOnce" ]
          resources:
            requests:
              storage: 200Mi
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: dsbd
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: dsbd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        network/kafka-network: "true"
        app: zookeeper
    spec:
      containers:
        - env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_SERVER_ID
              value: "1"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          image: confluentinc/cp-zookeeper:latest
          name: zookeeper
          ports:
            - containerPort: 2181
      hostname: zookeeper
      restartPolicy: Always

